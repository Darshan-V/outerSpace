{"version":3,"file":"use-last-fm.cjs.development.js","sources":["../src/lib.ts","../src/index.ts"],"sourcesContent":["import { LastFMResponseBody, State, TrackImage } from './types';\n\nexport function parseSong(\n  body: LastFMResponseBody | null,\n  imageSize: TrackImage['size'],\n): State {\n  if (!body) {\n    return {\n      status: 'connecting',\n      song: null,\n    };\n  }\n\n  const lastSong = body.recenttracks.track?.[0];\n\n  if (!lastSong || !lastSong['@attr']?.nowplaying) {\n    return {\n      status: 'idle',\n      song: null,\n    };\n  }\n\n  const image = lastSong.image.find(i => {\n    return i.size === imageSize;\n  });\n\n  return {\n    status: 'playing',\n    song: {\n      name: lastSong.name,\n      artist: lastSong.artist['#text'],\n      art: image?.['#text'] ?? lastSong.image[0]['#text'],\n      url: lastSong.url,\n      album: lastSong.album['#text'],\n    },\n  };\n}\n","import { TrackImage, State, LastFMResponseBody } from './types';\nimport { parseSong } from './lib';\nimport useSWR from 'swr';\n\n/**\n * Use Last.fm\n * @param username The username of the last.fm user to track\n * @param token Your API token\n * @param interval Optional, this is the interval between each request\n * @param imageSize The size of the image\n */\nexport function useLastFM(\n  username: string,\n  token: string,\n  interval: number = 15 * 1000,\n  imageSize: TrackImage['size'] = 'extralarge',\n): State {\n  const endpoint = `//ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=${username}&api_key=${token}&format=json&limit=1`;\n\n  const { data: track = null, error } = useSWR<LastFMResponseBody, Error>(\n    endpoint,\n    { refreshInterval: interval },\n  );\n\n  if (error) {\n    return {\n      status: 'error',\n      song: null,\n    };\n  }\n\n  try {\n    return parseSong(track, imageSize);\n  } catch (e) {\n    return {\n      status: 'error',\n      song: null,\n    };\n  }\n}\n\nexport * from './types';\n"],"names":["parseSong","body","imageSize","status","song","lastSong","recenttracks","track","nowplaying","image","find","i","size","name","artist","art","url","album","useLastFM","username","token","interval","endpoint","useSWR","refreshInterval","data","error","e"],"mappings":";;;;;;;;SAEgBA,UACdC,MACAC;;;AAEA,MAAI,CAACD,IAAL,EAAW;AACT,WAAO;AACLE,MAAAA,MAAM,EAAE,YADH;AAELC,MAAAA,IAAI,EAAE;AAFD,KAAP;AAID;;AAED,MAAMC,QAAQ,4BAAGJ,IAAI,CAACK,YAAL,CAAkBC,KAArB,qBAAG,sBAA0B,CAA1B,CAAjB;;AAEA,MAAI,CAACF,QAAD,IAAa,oBAACA,QAAQ,CAAC,OAAD,CAAT,qBAAC,eAAmBG,UAApB,CAAjB,EAAiD;AAC/C,WAAO;AACLL,MAAAA,MAAM,EAAE,MADH;AAELC,MAAAA,IAAI,EAAE;AAFD,KAAP;AAID;;AAED,MAAMK,KAAK,GAAGJ,QAAQ,CAACI,KAAT,CAAeC,IAAf,CAAoB,UAAAC,CAAC;AACjC,WAAOA,CAAC,CAACC,IAAF,KAAWV,SAAlB;AACD,GAFa,CAAd;AAIA,SAAO;AACLC,IAAAA,MAAM,EAAE,SADH;AAELC,IAAAA,IAAI,EAAE;AACJS,MAAAA,IAAI,EAAER,QAAQ,CAACQ,IADX;AAEJC,MAAAA,MAAM,EAAET,QAAQ,CAACS,MAAT,CAAgB,OAAhB,CAFJ;AAGJC,MAAAA,GAAG,iBAAEN,KAAF,oBAAEA,KAAK,CAAG,OAAH,CAAP,0BAAsBJ,QAAQ,CAACI,KAAT,CAAe,CAAf,EAAkB,OAAlB,CAHrB;AAIJO,MAAAA,GAAG,EAAEX,QAAQ,CAACW,GAJV;AAKJC,MAAAA,KAAK,EAAEZ,QAAQ,CAACY,KAAT,CAAe,OAAf;AALH;AAFD,GAAP;AAUD;;AChCD;;;;;;;;AAOA,SAAgBC,UACdC,UACAC,OACAC,UACAnB;MADAmB;AAAAA,IAAAA,WAAmB,KAAK;;;MACxBnB;AAAAA,IAAAA,YAAgC;;;AAEhC,MAAMoB,QAAQ,sEAAoEH,QAApE,iBAAwFC,KAAxF,yBAAd;;gBAEsCG,MAAM,CAC1CD,QAD0C,EAE1C;AAAEE,IAAAA,eAAe,EAAEH;AAAnB,GAF0C;6BAApCI;MAAMlB,kCAAQ;MAAMmB,gBAAAA;;AAK5B,MAAIA,KAAJ,EAAW;AACT,WAAO;AACLvB,MAAAA,MAAM,EAAE,OADH;AAELC,MAAAA,IAAI,EAAE;AAFD,KAAP;AAID;;AAED,MAAI;AACF,WAAOJ,SAAS,CAACO,KAAD,EAAQL,SAAR,CAAhB;AACD,GAFD,CAEE,OAAOyB,CAAP,EAAU;AACV,WAAO;AACLxB,MAAAA,MAAM,EAAE,OADH;AAELC,MAAAA,IAAI,EAAE;AAFD,KAAP;AAID;AACF;;;;"}